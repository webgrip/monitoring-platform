# TODO : Query front-end, alerts, recording rules,

target: all,alertmanager

multitenancy_enabled: false
server:

  http_listen_port: 9090
  grpc_listen_port: 9095

  log_level: info


memberlist:
  join_members: [ mimir-memberlist:7946 ]

#
#api:
#  prometheus_http_prefix: ''
#

#distributor:
#
#  ring:
#    #TODO: Set to env
#    instance_addr: 127.0.0.1
#
#    kvstore:
#      store: memberlist

ingester:

  ring:
    #    instance_addr: 127.0.0.1

    kvstore:
      store: inmemory
    # TODO: Consider running more than one, default is 3
    replication_factor: 1

alertmanager:
  data_dir: /data/alertmanager
  enable_api: true
  external_url: /alertmanager
  fallback_config_file: /etc/mimir/configs/alertmanager-fallback-config.yaml
alertmanager_storage:
  s3:
    bucket_name: mimir-alertmanager

#memberlist:
#  join_members: [mimir-memberlist:7946]


store_gateway:

  sharding_ring:

    replication_factor: 1

common:
  storage:
    backend: s3
    s3:
      endpoint: ${MIMIR_S3_ENDPOINT:minio.minio-store.svc:443}
      access_key_id: ${MIMIR_S3_ACCESS_KEY_ID:bucket}
      secret_access_key: ${MIMIR_S3_SECRET_ACCESS_KEY:supersecret}
      insecure: ${MIMIR_S3_INSECURE:false}
      http:
        insecure_skip_verify: true

blocks_storage:
  s3:
    bucket_name: mimir-blocks
  #TODO: Consider using an S3 or something
  backend: filesystem

  #  bucket_store:
  #    sync_dir: /tmp/mimir/tsdb-sync
  #
  #  filesystem:
  #    dir: /tmp/mimir/data/tsdb

  tsdb:
    dir: /data/ingester
    ship_interval: 1m
    block_ranges_period: [ 1h ]
    retention_period: 3h

ruler:
  rule_path: /data/rules
  enable_api: true
  alertmanager_url: http://localhost:9090/alertmanager
#  alertmanager_url: http://mimir-backend:9090/alertmanager



ruler_storage:
  s3:
    bucket_name: mimir-ruler

compactor:
  compaction_interval: 30s
  data_dir: /tmp/mimir-compactor
  cleanup_interval: 1m
  tenant_cleanup_delay: 1m



limits:

  max_global_exemplars_per_user: 100000
  ingestion_rate: 30000
  native_histograms_ingestion_enabled: true

overrides_exporter:
  ring:
    enabled: true
    wait_stability_min_duration: 30s

#query_scheduler:
#  service_discovery_mode: "ring"
#
runtime_config:
  file: /etc/mimir/configs/runtime.yaml

usage_stats:
  enabled: false
