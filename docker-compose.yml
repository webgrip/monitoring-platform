services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.52.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    ports:
      - "9090:9090"

  grafana:
    container_name: grafana
    image: grafana/grafana:11.0.0-ubuntu
    ports:
      - "3000:3000"
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/custom.ini
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/custom.ini:/etc/grafana/custom.ini

  loki:
    container_name: loki
    image: grafana/loki:2.9.8
    ports:
      - "3100:3100"
    volumes:
      - ./loki:/etc/loki
      - ./loki/wal:/wal
      - ./loki/chunks:/chunks
      - ./loki/index:/index
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml
    environment:
      - LOKI_STORAGE_PATH=/wal
      - LOKI_CHUNKS_PATH=/chunks
      - LOKI_INDEX_PATH=/index

  node_exporter:
    container_name: node_exporter
    image: prom/node-exporter:v1.8.1
    ports:
      - "9100:9100"

  github-webhook-receiver:
    container_name: github-webhook-receiver
    build:
      context: github-webhook-receiver
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SERVICE_PUBLIC_URL=http://ngrok:4040

  ngrok:
    container_name: ngrok
    image: ngrok/ngrok:3.10.0-alpine
    #restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok/ngrok.yml:/etc/ngrok.yml
    ports:
      - 4040:4040
    env_file:
      -  .env

volumes:
  grafana-data:



