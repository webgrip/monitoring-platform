services:
  grafana:
    container_name: grafana-monitoring-platform
    build:
      context: ops/docker/grafana
      dockerfile: Dockerfile
    ports:
      - 3001:3000
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/custom.ini
      - GF_RENDERING_SERVER_URL=http://monitoring-platform-grafana-image-renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3001/
      - GF_FEATURE_TOGGLE_ENABLE=traceqlEditor tracesEmbeddedFlameGraph traceqlSearch correlations metricsSummary traceToMetrics datatrails
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app,https://storage.googleapis.com/integration-artifacts/grafana-exploretraces-app/grafana-exploretraces-app-latest.zip;grafana-traces-app
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheaders.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.grafana-monitoring-platform.entrypoints=http"
      - "traefik.http.routers.grafana-monitoring-platform.rule=Host(`monitoring-platform.test`)"
      - "traefik.http.routers.grafana-monitoring-platform.middlewares=traefik-https-redirect"
      - "traefik.http.routers.grafana-monitoring-platform-secure.entrypoints=https"
      - "traefik.http.routers.grafana-monitoring-platform-secure.rule=Host(`monitoring-platform.test`)"
      - "traefik.http.routers.grafana-monitoring-platform-secure.tls=true"
      - "traefik.http.routers.grafana-monitoring-platform-secure.tls.domains[0].main=monitoring-platform.test"
      - "traefik.http.routers.grafana-monitoring-platform-secure.tls.domains[0].sans=*.monitoring-platform.test"
      - "traefik.http.routers.grafana-monitoring-platform-secure.service=grafana-monitoring-platform"
      - "traefik.http.services.grafana-monitoring-platform.loadbalancer.server.scheme=https"
      - "traefik.http.services.grafana-monitoring-platform.loadbalancer.server.port=3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./ops/docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./ops/docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./ops/docker/grafana/custom.ini:/etc/grafana/custom.ini
      - ./var/logs/grafana:/var/log/grafana

  monitoring-platform-grafana-image-renderer:
    container_name: monitoring-platform-grafana-image-renderer
    image: grafana/grafana-image-renderer:3.11.0
    ports:
      - 8081
    volumes:
      - ./ops/docker/grafana-image-renderer/config.json:/usr/src/app/config.json

  monitoring-platform-mkcert:
    container_name: monitoring-platform-mkcert
    image: webgrip/traefik-local-development-mkcert:latest
    pull_policy: always
    volumes:
      - ~/.config/mkcert:/root/.local/share/mkcert:ro
      - certificate-data:/certificate-data:rw
    entrypoint: [ "/app/entrypoint.sh", "monitoring-platform.test" ]

  monitoring-platform-loki:
    container_name: monitoring-platform-loki
    image: grafana/loki:3.2.0
    ports:
      - "3100:3100" # HTTP
      - "9095:9095" # GRCP
    volumes:
      - ./ops/docker/loki:/etc/loki
      - ./ops/docker/loki/local-config.yaml:/etc/loki/local-config.yaml
      - ./var/loki/index:/loki/tsdb-index
      - ./var/loki/wal:/wal
      - ./var/loki/chunks:/chunks
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  monitoring-platform-tempo:
    container_name: monitoring-platform-tempo
    depends_on:
      monitoring-platform-otel-collector:
        condition: service_started
    image: webgrip/monitoring-platform-tempo:latest
    build:
      context: ./ops/docker/tempo
      dockerfile: Dockerfile
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./ops/docker/tempo/tempo.yaml:/etc/tempo.yaml
    ports:
      - "14268:14268" # jaeger ingest
      - "3200:3200" # tempo
      - "4317:4317" # otlp grpc
      - "4318:4318" # otlp http
      - "9411:9411" # zipkin

#  monitoring-platform-k6-tracing:
#    container_name: monitoring-platform-k6-tracing
#    image: ghcr.io/grafana/xk6-client-tracing:v0.0.5
#    environment:
#      - "ENDPOINT=monitoring-platform-otel-collector:4317"
#    restart: always
#    depends_on:
#      - monitoring-platform-otel-collector

  monitoring-platform-otel-collector:
    container_name: monitoring-platform-otel-collector
    image: webgrip/monitoring-platform-otel-collector:latest
    build:
      context: ./ops/docker/otel-collector
      dockerfile: Dockerfile
    command: ["--config", "/etc/otelcol-contrib/config.yaml"]
    volumes:
      - ./ops/docker/otel-collector/config.yml:/etc/otelcol-contrib/config.yaml
    ports:
#      - "1888:1888"   # pprof extension
#      - "8888:8888"   # Prometheus metrics exposed by the collector
#      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
#      - "4317:4317"   # OTLP gRPC receiver
#      - "4318:4318"   # OTLP HTTP receiver

  monitoring-platform-mariadb:
    container_name: monitoring-platform-mariadb
    build:
      context: ./ops/docker/mariadb
      dockerfile: Dockerfile
    volumes:
      - ./ops/docker/mariadb/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: monitoring
      MYSQL_USER: monitor
      MYSQL_PASSWORD: monitor


volumes:
  grafana-data:
  certificate-data:
    external: true

networks:
  default:
    external: true
    name: webgrip
