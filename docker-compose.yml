services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.52.0
    volumes:
      - ./src/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./src/prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    ports:
      - "9090:9090"

  grafana:
    container_name: grafana-monitoring-platform
    image: grafana/grafana:11.0.0-ubuntu
    ports:
      - 3000:3000
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/custom.ini
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheaders.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.grafana-monitoring-platform.entrypoints=http"
      - "traefik.http.routers.grafana-monitoring-platform.rule=Host(`monitoring-platform.test`)"
      - "traefik.http.routers.grafana-monitoring-platform.middlewares=traefik-https-redirect"
      - "traefik.http.routers.grafana-monitoring-platform-secure.entrypoints=https"
      - "traefik.http.routers.grafana-monitoring-platform-secure.rule=Host(`monitoring-platform.test`)"
      - "traefik.http.routers.grafana-monitoring-platform-secure.tls=true"
      - "traefik.http.routers.grafana-monitoring-platform-secure.tls.domains[0].main=monitoring-platform.test"
      - "traefik.http.routers.grafana-monitoring-platform-secure.tls.domains[0].sans=*.monitoring-platform.test"
      - "traefik.http.routers.grafana-monitoring-platform-secure.service=grafana-monitoring-platform"
      - "traefik.http.services.grafana-monitoring-platform.loadbalancer.server.scheme=https"
      - "traefik.http.services.grafana-monitoring-platform.loadbalancer.server.port=3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./src/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./src/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./src/grafana/custom.ini:/etc/grafana/custom.ini
      - ./var/logs/grafana:/var/log/grafana

  loki:
    container_name: loki
    image: grafana/loki:2.9.8
    ports:
      - "3100:3100"
    volumes:
      - ./src/loki:/etc/loki
      - ./src/loki/local-config.yaml:/etc/loki/local-config.yaml
      - ./var/loki/wal:/wal
      - ./var/loki/chunks:/chunks
      - ./var/loki/index:/index
    environment:
      - LOKI_STORAGE_PATH=/wal
      - LOKI_CHUNKS_PATH=/chunks
      - LOKI_INDEX_PATH=/index

  node_exporter:
    container_name: node_exporter
    image: prom/node-exporter:v1.8.1
    ports:
      - "9100:9100"

  github-webhook-receiver:
    container_name: github-webhook-receiver
    build:
      context: src/github-webhook-receiver
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SERVICE_PUBLIC_URL=http://ngrok:4040

  ngrok:
    container_name: ngrok
    image: ngrok/ngrok:3.10.0-alpine
    #restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./src/ngrok/ngrok.yml:/etc/ngrok.yml
    ports:
      - 4040:4040
    env_file:
      -  src/ngrok/.env

  mariadb:
    container_name: mariadb
    build:
      context: ./src/mariadb
      dockerfile: Dockerfile
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: monitor
      MYSQL_USER: monitor
      MYSQL_PASSWORD: monitor

  monitoring-platform-mkcert:
    container_name: monitoring-platform-mkcert
    image: webgrip/traefik-mkcert:latest
    volumes:
      - ~/.config/mkcert:/root/.local/share/mkcert:ro
      - certificate-data:/certificate-data:rw
    entrypoint: [ "/app/entrypoint.sh", "monitoring-platform.test" ]

volumes:
  grafana-data:
  certificate-data:
    external: true

networks:
  default:
    external: true
    name: webgrip
